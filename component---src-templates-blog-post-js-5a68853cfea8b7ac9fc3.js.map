{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","siteDescription","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","location","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","lang","meta","name","content","frontmatter","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"yOAQMA,4FACJC,kBACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAC9CC,EAAkBT,EAAKU,QAHtBC,EAIoBV,KAAKC,MAAMU,YAA9BC,EAJDF,EAICE,SAAUC,EAJXH,EAIWG,KAElB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUlB,KAAKC,MAAMiB,SAAUX,MAAOH,GAC5CU,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,eAAgB,CAAEC,KAAM,MACxBC,KAAM,CAAC,CAAEC,KAAM,cAAeC,QAAShB,IACvCD,MAAUR,EAAK0B,YAAYlB,MAAtB,MAAiCH,IAExCU,EAAAC,EAAAC,cAAA,UAAKjB,EAAK0B,YAAYlB,OACtBO,EAAAC,EAAAC,cAAA,KACEU,MAAKC,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHC,QAAS,QACTC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBjC,EAAK0B,YAAYS,MAEpBpB,EAAAC,EAAAC,cAAA,OAAKmB,wBAAyB,CAAEC,OAAQrC,EAAKsC,QAC7CvB,EAAAC,EAAAC,cAAA,MACEU,MAAO,CACLK,aAAcC,YAAO,MAGzBlB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MAEAxB,EAAAC,EAAAC,cAAA,MACEU,MAAO,CACLI,QAAS,OACTS,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX5B,EAAAC,EAAAC,cAAA,UAEIJ,GACAE,EAAAC,EAAAC,cAAC2B,EAAA,KAAD,CAAMC,GAAIhC,EAASiC,OAAOC,KAAMC,IAAI,QAApC,KACKnC,EAASa,YAAYlB,QAI9BO,EAAAC,EAAAC,cAAA,UAEIH,GACAC,EAAAC,EAAAC,cAAC2B,EAAA,KAAD,CAAMC,GAAI/B,EAAKgC,OAAOC,KAAMC,IAAI,QAC7BlC,EAAKY,YAAYlB,MADpB,aArDiByC,IAAMC,WAgEtBpD,YAER,IAAMqD,EAAS","file":"component---src-templates-blog-post-js-5a68853cfea8b7ac9fc3.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteDescription = post.excerpt\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Helmet\n          htmlAttributes={{ lang: 'en' }}\n          meta={[{ name: 'description', content: siteDescription }]}\n          title={`${post.frontmatter.title} | ${siteTitle}`}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: 'block',\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date}\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            listStyle: 'none',\n            padding: 0,\n          }}\n        >\n          <li>\n            {\n              previous &&\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            }\n          </li>\n          <li>\n            {\n              next &&\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            }\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}